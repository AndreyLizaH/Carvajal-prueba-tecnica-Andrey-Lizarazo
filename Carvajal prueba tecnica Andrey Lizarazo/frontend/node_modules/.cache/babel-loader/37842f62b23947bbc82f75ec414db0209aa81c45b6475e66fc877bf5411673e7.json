{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javier Lizarazo\\\\Desktop\\\\Carvajal prueba tecnica Andrey Lizarazo\\\\frontend\\\\src\\\\Paginas\\\\editor.js\",\n  _s = $RefreshSig$();\n// import React, {useEffect, useState} from \"react\";\n// import { useHistory , useLocation, useParams} from \"react-router-dom\";\n// import axios from \"axios\";\n// import './editor.css'\n// import { toast } from \"react-toastify\";\n\n// const estadoInicial ={\n//     nombre: \"\",\n//     correo: \"\",\n//     contacto: \"\",\n\n// };\n\n// const Editor =() =>{\n//     const [state, setState] = useState(estadoInicial);\n//     const{nombre, correo, contacto} = state;\n\n//     const history = useHistory();\n\n//     const {id} = useParams();\n//     useEffect(() => {\n//         if (id) {\n//             getSingleUser(id);\n//         }\n//     }, [id])\n\n//     const getSingleUser = async (id) => {\n//         const response = await axios.delete(`http://localhost:5000/usuario/${id}`)\n//             if (response.status === 200) {\n//                 setState({...response.data[0]});\n//             }\n//     }\n\n//     const AddUsuario = async(data)=>{\n//         const response = await axios.post(\"http://localhost:5000/usuario\", data);\n//         if(response.status === 200){\n//             toast.success(response.data);\n//         }\n//     };\n//     const updateUsuario = async(data, id)=>{\n//         const response = await axios.put(`http://localhost:5000/usuario/${id}`, data);\n//         if(response.status === 200){\n//             toast.success(response.data);\n//         }\n//     };\n//     // Se agrega ventana emergente para avisar la ausencia de algún dato\n//     const handleSubmit = (evento)=>{\n//         evento.preventDefault();\n//         if(!nombre || !correo||!contacto){\n//             toast.error(\"Por favor agregue todos los datos\");\n//         }else{\n//             if (!id) {\n//                 AddUsuario(state);\n//             }else{\n//                 updateUsuario(state, id);\n//             }\n\n//             setTimeout(() => history.push(\"/\"), 500);\n//         }\n\n//     };\n//     const handleInputChange = (evento) =>{\n//         let {nombre, value} = evento.target;\n//         setState({...state,[nombre]:value});\n//     };\n//     return(\n//         <div style={{marginTop:\"100px\"}}>\n//             <form style={{\n//                 margin:\"auto\", \n//                 padding:\"15px\", \n//                 maxWidth:\"400px\", \n//                 alignContent:\"center\"}}\n\n//                 onSubmit = {handleSubmit}>\n//                     <label htmlFor = \"nombre\">Nombre</label>\n//                     <input \n//                         type=\"text\" \n//                         id = \"nombre\" \n//                         nombre = \"nombre\" \n//                         placeholder=\"Ingrese su nombre:  \" \n//                         onChange={handleInputChange} \n//                         defaultValue = {nombre}\n//                         ></input>\n\n//                     <label htmlFor = \"correo\">Correo</label>\n//                     <input \n//                         type=\"text\" \n//                         id = \"correo\" \n//                         nombre = \"correo\" \n//                         placeholder=\"Ingrese su correo:  \" \n//                         onChange={handleInputChange} \n//                         defaultValue = {correo}\n//                         ></input>\n\n//                     <label htmlFor = \"contacto\">Contacto</label>\n//                     <input \n//                         type=\"text\" \n//                         id = \"contacto\" \n//                         nombre = \"contacto\" \n//                         placeholder=\"Ingrese su número de contacto:  \" \n//                         onChange={handleInputChange} \n//                         defaultValue = {contacto}\n//                         ></input>   \n//                 <input type=\"submit\" value={id ? \"update\": \"añadir\"}></input>        \n//             </form>\n//         </div>\n\n//         );\n\n// };\n\n// export default Editor;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./AddEdit.css\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  contact: \"\"\n};\nconst AddEdit = () => {\n  _s();\n  const [state, setState] = useState(initialState);\n  const {\n    name,\n    email,\n    contact\n  } = state;\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      getSingleUser(id);\n    }\n  }, [id]);\n  const getSingleUser = async id => {\n    const response = await axios.get(`http://localhost:5000/user/${id}`);\n    if (response.status === 200) {\n      setState({\n        ...response.data[0]\n      });\n    }\n  };\n  const handleInputChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const addUser = async data => {\n    const response = await axios.post(\"http://localhost:5000/user\", data);\n    if (response.status === 200) {\n      toast.success(response.data);\n    }\n  };\n  const updateUser = async (data, id) => {\n    const response = await axios.put(`http://localhost:5000/user/${id}`, data);\n    if (response.status === 200) {\n      toast.success(response.data);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !email || !contact) {\n      toast.error(\"Please provide value in each input field\");\n    } else {\n      if (!id) {\n        addUser(state);\n      } else {\n        updateUser(state, id);\n      }\n      setTimeout(() => history.push(\"/\"), 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"100px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        margin: \"auto\",\n        padding: \"15px\",\n        maxWidth: \"400px\",\n        alignContent: \"center\"\n      },\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Enter Name...\",\n        value: name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Enter Email...\",\n        value: email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contact\",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"contact\",\n        name: \"contact\",\n        placeholder: \"Enter Contact No. ...\",\n        value: contact,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: id ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(AddEdit, \"HX7niYHxndcVY9xNFj/XenZpC5s=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = AddEdit;\nexport default AddEdit;\nvar _c;\n$RefreshReg$(_c, \"AddEdit\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","toast","axios","initialState","name","email","contact","AddEdit","state","setState","history","id","getSingleUser","response","get","status","data","handleInputChange","e","value","target","addUser","post","success","updateUser","put","handleSubmit","preventDefault","error","setTimeout","push","marginTop","margin","padding","maxWidth","alignContent"],"sources":["C:/Users/Javier Lizarazo/Desktop/Carvajal prueba tecnica Andrey Lizarazo/frontend/src/Paginas/editor.js"],"sourcesContent":["// import React, {useEffect, useState} from \"react\";\r\n// import { useHistory , useLocation, useParams} from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import './editor.css'\r\n// import { toast } from \"react-toastify\";\r\n\r\n// const estadoInicial ={\r\n//     nombre: \"\",\r\n//     correo: \"\",\r\n//     contacto: \"\",\r\n\r\n// };\r\n\r\n// const Editor =() =>{\r\n//     const [state, setState] = useState(estadoInicial);\r\n//     const{nombre, correo, contacto} = state;\r\n\r\n//     const history = useHistory();\r\n\r\n//     const {id} = useParams();\r\n//     useEffect(() => {\r\n//         if (id) {\r\n//             getSingleUser(id);\r\n//         }\r\n//     }, [id])\r\n\r\n//     const getSingleUser = async (id) => {\r\n//         const response = await axios.delete(`http://localhost:5000/usuario/${id}`)\r\n//             if (response.status === 200) {\r\n//                 setState({...response.data[0]});\r\n//             }\r\n//     }\r\n\r\n//     const AddUsuario = async(data)=>{\r\n//         const response = await axios.post(\"http://localhost:5000/usuario\", data);\r\n//         if(response.status === 200){\r\n//             toast.success(response.data);\r\n//         }\r\n//     };\r\n//     const updateUsuario = async(data, id)=>{\r\n//         const response = await axios.put(`http://localhost:5000/usuario/${id}`, data);\r\n//         if(response.status === 200){\r\n//             toast.success(response.data);\r\n//         }\r\n//     };\r\n//     // Se agrega ventana emergente para avisar la ausencia de algún dato\r\n//     const handleSubmit = (evento)=>{\r\n//         evento.preventDefault();\r\n//         if(!nombre || !correo||!contacto){\r\n//             toast.error(\"Por favor agregue todos los datos\");\r\n//         }else{\r\n//             if (!id) {\r\n//                 AddUsuario(state);\r\n//             }else{\r\n//                 updateUsuario(state, id);\r\n//             }\r\n            \r\n//             setTimeout(() => history.push(\"/\"), 500);\r\n//         }\r\n\r\n\r\n//     };\r\n//     const handleInputChange = (evento) =>{\r\n//         let {nombre, value} = evento.target;\r\n//         setState({...state,[nombre]:value});\r\n//     };\r\n//     return(\r\n//         <div style={{marginTop:\"100px\"}}>\r\n//             <form style={{\r\n//                 margin:\"auto\", \r\n//                 padding:\"15px\", \r\n//                 maxWidth:\"400px\", \r\n//                 alignContent:\"center\"}}\r\n                \r\n//                 onSubmit = {handleSubmit}>\r\n//                     <label htmlFor = \"nombre\">Nombre</label>\r\n//                     <input \r\n//                         type=\"text\" \r\n//                         id = \"nombre\" \r\n//                         nombre = \"nombre\" \r\n//                         placeholder=\"Ingrese su nombre:  \" \r\n//                         onChange={handleInputChange} \r\n//                         defaultValue = {nombre}\r\n//                         ></input>\r\n\r\n\r\n//                     <label htmlFor = \"correo\">Correo</label>\r\n//                     <input \r\n//                         type=\"text\" \r\n//                         id = \"correo\" \r\n//                         nombre = \"correo\" \r\n//                         placeholder=\"Ingrese su correo:  \" \r\n//                         onChange={handleInputChange} \r\n//                         defaultValue = {correo}\r\n//                         ></input>\r\n\r\n//                     <label htmlFor = \"contacto\">Contacto</label>\r\n//                     <input \r\n//                         type=\"text\" \r\n//                         id = \"contacto\" \r\n//                         nombre = \"contacto\" \r\n//                         placeholder=\"Ingrese su número de contacto:  \" \r\n//                         onChange={handleInputChange} \r\n//                         defaultValue = {contacto}\r\n//                         ></input>   \r\n//                 <input type=\"submit\" value={id ? \"update\": \"añadir\"}></input>        \r\n//             </form>\r\n//         </div>\r\n\r\n//         );\r\n    \r\n// };\r\n\r\n// export default Editor;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"./AddEdit.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  contact: \"\",\r\n};\r\n\r\nconst AddEdit = () => {\r\n  const [state, setState] = useState(initialState);\r\n  const { name, email, contact } = state;\r\n\r\n  const history = useHistory();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getSingleUser(id);\r\n    }\r\n  }, [id]);\r\n\r\n  const getSingleUser = async (id) => {\r\n    const response = await axios.get(`http://localhost:5000/user/${id}`);\r\n    if (response.status === 200) {\r\n      setState({ ...response.data[0] });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addUser = async (data) => {\r\n    const response = await axios.post(\"http://localhost:5000/user\", data);\r\n    if (response.status === 200) {\r\n      toast.success(response.data);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (data, id) => {\r\n    const response = await axios.put(`http://localhost:5000/user/${id}`, data);\r\n    if (response.status === 200) {\r\n      toast.success(response.data);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !email || !contact) {\r\n      toast.error(\"Please provide value in each input field\");\r\n    } else {\r\n      if (!id) {\r\n        addUser(state);\r\n      } else {\r\n        updateUser(state, id);\r\n      }\r\n\r\n      setTimeout(() => history.push(\"/\"), 500);\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"100px\" }}>\r\n      <form\r\n        style={{\r\n          margin: \"auto\",\r\n          padding: \"15px\",\r\n          maxWidth: \"400px\",\r\n          alignContent: \"center\",\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          placeholder=\"Enter Name...\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter Email...\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <label htmlFor=\"contact\">Contact</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"contact\"\r\n          name=\"contact\"\r\n          placeholder=\"Enter Contact No. ...\"\r\n          value={contact}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input type=\"submit\" value={id ? \"Update\" : \"Add\"} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}